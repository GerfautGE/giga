name: CI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create_release:
    name: create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Giga ${{ github.ref }}
          draft: false
          prerelease: false

  deploy:
    needs: create_release
    name: deploy
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        target:  
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf 
          - arm-unknown-linux-gnueabi 
          - x86_64-unknown-linux-gnu 
          - riscv64gc-unknown-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/giga
          asset_name: giga-${{ matrix.target }}
          asset_content_type: application/octet-stream
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

